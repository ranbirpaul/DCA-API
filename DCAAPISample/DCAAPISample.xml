<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DCAAPISample</name>
    </assembly>
    <members>
        <member name="T:DCAAPISample.Controllers.DCAObjectsController">
            <summary>
            DCA Object API performs the ADD/UPDATE/DELETE/UPDATE of the DCA Objects
            </summary>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAObjectsController.#ctor(Service.Abstract.IDCAService)">
             <summary>
            Initializes DCA Object
             </summary>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAObjectsController.GetObjectsAsync(System.String,System.String)">
            <summary>
            Retrieve the DCA Objects by Object ID and DCA Type
            </summary>
            <remarks>
            Retrieve the DCA Objects by Object ID and DCA Type
            </remarks>
            <param name="objectId"> ObjectId created during DCA Object creation</param>
            <param name="dcaType">DCA Type mapped with DCA Type API</param>
            <returns>A string status</returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAObjectsController.FilterName(System.String,System.String)">
            <summary>
            Returns a object name of the specific DCA Type
            </summary>
            <remarks>
            Search DCA objects name of specific DCA Type 
            </remarks>
            <param name="name">The name to search for</param>
            <param name="dcaType">The dcaType to search for</param>
            <returns>A matched pairs with the name and DCA type</returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAObjectsController.PostAsync(System.Object)">
             <summary>
             Adds DCA Objects to the API with unique name 
             </summary>
             <remarks>
              Adds DCA Objects to the API with unique name.
             </remarks>
             <param name="payload">{   
             "dcaType":"Rack",
            "name":"Rack Name",
            "properties": {
            "serialNumber": {
            "value": "123"
            }
             }
            }</param>
             <returns>Response 200 Success 
             400 Bad Request </returns>
              POST api/values
        </member>
        <member name="M:DCAAPISample.Controllers.DCAObjectsController.PostAsyncWithoutSearch(System.Object)">
             <summary>
             Adds DCA Objects to the API 
             </summary>
             <remarks>
              Adds DCA Objects to the API without unique name. This method doesn't check whether DCA object with same name exists or not. 
             </remarks>
             <param name="payload">{   
             Example 
             "dcaType":"Rack",
            "name":"Rack Name",
            "properties": {
            "serialNumber": {
            "value": "123"
            }
             }
            }</param>
             <returns>Response 200 Success </returns>
             <returns>Response 400 Bad Request </returns>
             <returns>Response 409 Conflict</returns>
              POST api/values
        </member>
        <member name="M:DCAAPISample.Controllers.DCAObjectsController.PutAsync(System.String,System.String,System.Object)">
             <summary>
             Updates DCA Objects to the API 
             </summary>
             <remarks>
              Updates DCA Objects to the API based on provided Object Id and DCA Type
             </remarks>
             <param name="objectId">DCA Object Id</param>
             <param name="dcaType">DCA Type of the Object</param>
             <param name="payload">{   
             Example 
             "dcaType":"Rack",
            "name":"Rack Name",
            "properties": {
            "serialNumber": {
            "value": "123"
            }
             }
            }</param>
             <returns>Response 200 Success 
             400 Bad Request </returns>
             <returns>Response 409 Conflict</returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAObjectsController.DeleteAsync(System.String,System.String)">
             <summary>
             Deletes DCA Objects to the API 
             </summary>
             <remarks>
              Delete DCA Objects from the API of the specific Object Id and DCA Type
             </remarks>
             <param name="objectId">
            </param>
            	/// <param name="dcaType">
            </param>
             <returns>Response 200 Success 
             400 Bad Request </returns>
        </member>
        <member name="T:DCAAPISample.Controllers.DCAReferencesController">
            <summary>
            DCA Reference preforms the Add/Delete/Update of the DCA references
            </summary>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAReferencesController.#ctor(Service.Abstract.IDCAReferencesService)">
            <summary>
            Initializes DCA References
            </summary>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAReferencesController.GetReferencesAsync(System.String)">
             <summary>
             Retrieves DCA Reference by reference Id 
             </summary>
             <remarks>
            Retrieves DCA Reference by reference Id 
             </remarks>
             <param name="referenceId">DCA Reference Id </param>
             <returns>Response 200 Success </returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAReferencesController.GetReferencesBasedOnObjectAndDCATypeAsync(System.String,System.String)">
            <summary>
            Retrieves DCA Reference by Object Id and DCAType
            </summary>
            <remarks>
            Updates specific all DCA Types
            </remarks>
            <param name="objectId"> DCA Object Id</param>
            <param name="dcaType">DCA Type </param>
            <returns>Response 200 Success </returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAReferencesController.GetChildObjectReferences(System.String,System.String)">
             <summary>
             Retrieves Child Object References by Object Id and DCAType
             </summary>
             <remarks>
             Gets Child Object References by Object Id and DCAType
             </remarks>
             <param name="objectId">Parent Object Id</param>
             <param name="dcaType">Parent DCA Type
            </param>
             <returns>Response 200 Success </returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAReferencesController.PostAsync(System.String,System.String,System.Object)">
             <summary>
             Creates Object References from Parent to Child Object
             </summary>
             <remarks>
              Creates a Object Reference between Parent and Child Object
             </remarks>
             <param name="objectId">Parent Object Id</param>
             <param name="dcaType"> Parent DCA type</param>
             <param name="payload">
             [
            		 {
                "name": "children",
                "to": {
                  "objectId": Child Object Id
                  "dcaType": Child DCA Type
                }
              }
            ]
             </param>
             <returns>Response 200 Success </returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCAReferencesController.DeleteAsync(System.String)">
            <summary>
            Deletes  Object References by reference Id
            </summary>
            <remarks>
            Deletes given DCA Reference
            </remarks>
            <param name="referenceId"></param>
            <returns>Response 200 Success </returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCATypesController.#ctor(Service.Abstract.IDCATypeService)">
            <summary>
            Initializes DCA Types
            </summary>
        </member>
        <member name="M:DCAAPISample.Controllers.DCATypesController.GetDCAType(System.String)">
             <summary>
             Get DCA Type data of specific DCA Type
             </summary>
             <remarks>
             Retrieves DCA Type of specific DCA Type.
             </remarks>
             <param name="type">
            </param>
             <returns>Response 200 Success </returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCATypesController.GetDCATypes">
            <summary>
            Gets all the DCA Types 
            </summary>
            <remarks>
            Retrieves all the DCA Types
            </remarks>
            <returns>Response 200 Success </returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCATypesController.Post(Business_Model.DCATypeModel)">
             <summary>
             Adds new DCA Type into the API
             </summary>
             <remarks>
             Retrieves all the DCA Types
             </remarks>
             <param name="dCAType">
            </param>
             <returns>Response 200 Success </returns>
        </member>
        <member name="M:DCAAPISample.Controllers.DCATypesController.UpdateDCATypes(Business_Model.DCATypeModel)">
             <summary>
             Updates DCA Type 
             </summary>
             <remarks>
             Updates specific DCA Type
             </remarks>
             <param name="dCAType">
            </param>
             <returns>Response 200 Success </returns>
        </member>
        <member name="M:DCAAPISample.Controllers.QueryController.SendQuery(System.Object)">
             <summary>
             Query API
             </summary>
             <remarks>
              Query syntax will remain same as below except one thing i.e.. replace model with dcaType
            	https://abb.sharepoint.com/sites/ABBAbility/Wiki/Pages/API%20Development/Domain%20Specific%20Language%20Overview.aspx
             </remarks>
             <param name="query">
             Example
            ".dcaType('Rack')" 
            </param>
             <returns>Response 200 Success </returns>
        </member>
    </members>
</doc>
